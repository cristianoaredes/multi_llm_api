version: '3.8'

services:
  # API service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api_dart
    ports:
      - "8081:8080"
    environment:
      - DART_ENV=development
      - SERVER_PORT=8080
    volumes:
      # Mount the OpenAPI specification
      - ./openapi:/app/openapi
      # Mount the environment file
      - ./.env.development:/app/.env
    depends_on:
      - postgres
      - redis
    networks:
      - api_network
    command: ["/app/bin/server"]
    restart: unless-stopped

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: api_dart_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: api_dart_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Initialize database with schema
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - api_network
    restart: unless-stopped

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: api_dart_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - api_network
    restart: unless-stopped

  # Adminer for database management
  adminer:
    image: adminer:latest
    container_name: api_dart_adminer
    ports:
      - "8082:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - api_network
    restart: unless-stopped

  # Swagger UI for API documentation
  swagger-ui:
    image: swaggerapi/swagger-ui:latest
    container_name: api_dart_swagger
    ports:
      - "8083:8080"
    environment:
      API_URL: /openapi.yaml
      BASE_URL: /
    volumes:
      - ./openapi/openapi.yaml:/usr/share/nginx/html/openapi.yaml
    networks:
      - api_network
    restart: unless-stopped

networks:
  api_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
